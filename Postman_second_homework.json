{
	"info": {
		"_postman_id": "9f3bfad9-c6cf-46f9-9d64-13ae49e36538",
		"name": "QA_19 HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "yatoma",
							"type": "text"
						},
						{
							"key": "password",
							"value": "yatoma1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/login",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "yatoma",
							"disabled": true
						},
						{
							"key": "password",
							"value": "yatoma1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"// Вносим имя в окружение\r",
							"\r",
							"pm.environment.set (\"name\", jsonData.person.u_name[0]);\r",
							"\r",
							"//2.1Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//2.3 тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var req = JSON.parse(request.data)\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(req.salary * 2);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(req.salary * 2.9);\r",
							"});\r",
							"\r",
							"//2.2 Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"u_age\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"u_name\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"u_age\",\r",
							"        \"u_name\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"qa_salary_after_6_months\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"start_qa_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"person\",\r",
							"    \"qa_salary_after_12_months\",\r",
							"    \"qa_salary_after_6_months\",\r",
							"    \"start_qa_salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"//2.4 Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://116.203.27.46:5002/get_test_user\r",
							"\r",
							"postman.setEnvironmentVariable(\"u_salary_1_5_year\", jsonData.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"age\": 30,\r\n\"salary\": 500,\r\n\"name\": \"Tamara\",\r\n\"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://168.119.182.98:5002/user_info",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "New_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"// 3.3 проверка правильности результата перемножения на коэффициент.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Salary*2\", function () {\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql((pm.environment.get (\"u_salary_1_5_year\")) *2);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Salary*3\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql((pm.environment.get (\"u_salary_1_5_year\")) *3);\r",
							"});\r",
							"\r",
							"//3.4 Проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Second element abowe zero in Array\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.be.above(jsonData.salary[0]);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Second element abowe one in Array\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.be.above(Number(jsonData.salary[1]));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1_5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/new_data",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 4.1 Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//4.2 Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"\t\"definitions\": {},\r",
							"\t\"$schema\": \"http://json-schema.org/draft-07/schema#\", \r",
							"\t\"$id\": \"https://example.com/object1624347598.json\", \r",
							"\t\"title\": \"Root\", \r",
							"\t\"type\": \"object\",\r",
							"\t\"required\": [\r",
							"\t\t\"age\",\r",
							"\t\t\"daily_food\",\r",
							"\t\t\"daily_sleep\",\r",
							"\t\t\"name\"\r",
							"\t],\r",
							"\t\"properties\": {\r",
							"\t\t\"age\": {\r",
							"\t\t\t\"$id\": \"#root/age\", \r",
							"\t\t\t\"title\": \"Age\", \r",
							"\t\t\t\"type\": \"integer\",\r",
							"\t\t\t\"examples\": [\r",
							"\t\t\t\t30\r",
							"\t\t\t],\r",
							"\t\t\t\"default\": 0\r",
							"\t\t},\r",
							"\t\t\"daily_food\": {\r",
							"\t\t\t\"$id\": \"#root/daily_food\", \r",
							"\t\t\t\"title\": \"Daily_food\", \r",
							"\t\t\t\"type\": \"number\",\r",
							"\t\t\t\"examples\": [\r",
							"\t\t\t\t0.78\r",
							"\t\t\t],\r",
							"\t\t\t\"default\": 0.0\r",
							"\t\t},\r",
							"\t\t\"daily_sleep\": {\r",
							"\t\t\t\"$id\": \"#root/daily_sleep\", \r",
							"\t\t\t\"title\": \"Daily_sleep\", \r",
							"\t\t\t\"type\": \"number\",\r",
							"\t\t\t\"examples\": [\r",
							"\t\t\t\t162.5\r",
							"\t\t\t],\r",
							"\t\t\t\"default\": 0.0\r",
							"\t\t},\r",
							"\t\t\"name\": {\r",
							"\t\t\t\"$id\": \"#root/name\", \r",
							"\t\t\t\"title\": \"Name\", \r",
							"\t\t\t\"type\": \"string\",\r",
							"\t\t\t\"default\": \"\",\r",
							"\t\t\t\"examples\": [\r",
							"\t\t\t\t\"Tamara\"\r",
							"\t\t\t],\r",
							"\t\t\t\"pattern\": \"^.*$\"\r",
							"\t\t}\r",
							"\t}\r",
							"}\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// 4.3 В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"daily_food = weight*0.012\", function () {\r",
							"  pm.expect(jsonData.daily_food).to.eql(request.data.weight * 0.012);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"daily_sleep = weight*2.5\", function () {\r",
							"  pm.expect(jsonData.daily_sleep).to.eql(request.data.weight * 2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "65",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/test_pet_info",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"// 5.1 Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 5.2 Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": [\r",
							"                        {\r",
							"                            \"type\": \"array\",\r",
							"                            \"items\": [\r",
							"                                {\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                {\r",
							"                                    \"type\": \"integer\"\r",
							"                                }\r",
							"                            ]\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"array\",\r",
							"                            \"items\": [\r",
							"                                {\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                {\r",
							"                                    \"type\": \"integer\"\r",
							"                                }\r",
							"                            ]\r",
							"                        }\r",
							"                    ]\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"children\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"family\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ]\r",
							"}\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// 5.3 Проверить что занчение поля name = значению переменной name из окружения\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\"));\r",
							"});\r",
							"\r",
							"// 5.4 Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Test Age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"30\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1_5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/get_test_user",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": "age",
							"value": "30",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "1000",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Tamara",
							"disabled": true
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"console.log(jsonData.length)\r",
							"var i=jsonData.length\r",
							"function getRandomInt(i) {\r",
							"    return Math.floor(Math.random() * i);\r",
							"}\r",
							"\r",
							"console.log(jsonData[getRandomInt(i)]);\r",
							"console.log(jsonData[getRandomInt(i)].Cur_ID);\r",
							"\r",
							"pm.environment.set(\"curr_code\", jsonData[getRandomInt(i)].Cur_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/currency",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "Curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 6.1 Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6.2 Проверка структуры json в ответе.\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_ID\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Cur_Name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_OfficialRate\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"Cur_Scale\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Date\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"Cur_Abbreviation\",\r",
							"    \"Cur_ID\",\r",
							"    \"Cur_Name\",\r",
							"    \"Cur_OfficialRate\",\r",
							"    \"Cur_Scale\",\r",
							"    \"Date\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "23",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://168.119.182.98:5002/curr_byn",
					"protocol": "http",
					"host": [
						"168",
						"119",
						"182",
						"98"
					],
					"port": "5002",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}